{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kathlene\\\\OneDrive\\\\Desktop\\\\Sibbap management system(latest)\\\\client\\\\src\\\\pages\\\\Users.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport UserModal from \"./UserModal\"; // Make sure to import your modal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Sample users list (you can replace this with data from your API)\n  const users = [{\n    id: 1,\n    userName: \"John Doe\",\n    email: \"john@example.com\"\n  }, {\n    id: 2,\n    userName: \"Jane Smith\",\n    email: \"jane@example.com\"\n  }];\n\n  // Function to handle edit button click\n  const handleEditClick = user => {\n    setSelectedUser(user); // Set selected user to pass to the modal\n    setIsModalOpen(true); // Open the modal\n  };\n\n  // Function to close the modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedUser(null); // Reset selected user when closing modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.userName, \" (\", user.email, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditClick(user),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(UserModal, {\n      onClose: closeModal,\n      member: selectedUser,\n      onSave: (formData, id) => {\n        // Handle save action here, either update or create new user\n        console.log(\"Saved data:\", formData);\n        closeModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"v5RBHSZXf3ZJVHjLElmcM6z1+Dg=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","UserModal","jsxDEV","_jsxDEV","Users","_s","isModalOpen","setIsModalOpen","selectedUser","setSelectedUser","users","id","userName","email","handleEditClick","user","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onClose","member","onSave","formData","console","log","_c","$RefreshReg$"],"sources":["C:/Users/kathlene/OneDrive/Desktop/Sibbap management system(latest)/client/src/pages/Users.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UserModal from \"./UserModal\"; // Make sure to import your modal component\r\n\r\nconst Users = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  // Sample users list (you can replace this with data from your API)\r\n  const users = [\r\n    { id: 1, userName: \"John Doe\", email: \"john@example.com\" },\r\n    { id: 2, userName: \"Jane Smith\", email: \"jane@example.com\" },\r\n  ];\r\n\r\n  // Function to handle edit button click\r\n  const handleEditClick = (user) => {\r\n    setSelectedUser(user); // Set selected user to pass to the modal\r\n    setIsModalOpen(true);   // Open the modal\r\n  };\r\n\r\n  // Function to close the modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedUser(null);  // Reset selected user when closing modal\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>User List</h1>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li key={user.id}>\r\n            {user.userName} ({user.email})\r\n            <button onClick={() => handleEditClick(user)}>Edit</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {isModalOpen && (\r\n        <UserModal\r\n          onClose={closeModal}\r\n          member={selectedUser}\r\n          onSave={(formData, id) => {\r\n            // Handle save action here, either update or create new user\r\n            console.log(\"Saved data:\", formData);\r\n            closeModal();\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMU,KAAK,GAAG,CACZ;IAAEC,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAmB,CAAC,EAC1D;IAAEF,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAmB,CAAC,CAC7D;;EAED;EACA,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChCN,eAAe,CAACM,IAAI,CAAC,CAAC,CAAC;IACvBR,cAAc,CAAC,IAAI,CAAC,CAAC,CAAG;EAC1B,CAAC;;EAED;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBT,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,IAAI,CAAC,CAAC,CAAE;EAC1B,CAAC;EAED,oBACEN,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA;MAAAc,QAAA,EACGP,KAAK,CAACY,GAAG,CAAEP,IAAI,iBACdZ,OAAA;QAAAc,QAAA,GACGF,IAAI,CAACH,QAAQ,EAAC,IAAE,EAACG,IAAI,CAACF,KAAK,EAAC,GAC7B,eAAAV,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMT,eAAe,CAACC,IAAI,CAAE;UAAAE,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFpDN,IAAI,CAACJ,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAEJf,WAAW,iBACVH,OAAA,CAACF,SAAS;MACRuB,OAAO,EAAER,UAAW;MACpBS,MAAM,EAAEjB,YAAa;MACrBkB,MAAM,EAAEA,CAACC,QAAQ,EAAEhB,EAAE,KAAK;QACxB;QACAiB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,QAAQ,CAAC;QACpCX,UAAU,CAAC,CAAC;MACd;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA/CID,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAiDX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}